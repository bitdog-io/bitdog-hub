#!/usr/bin/env node

var process = require('process');
process.chdir(__dirname);

var program = require('commander');
var bitdogClient = require('bitdog-client');


program
    .version('0.0.50');
	 
program.command('register')
    .description('Register this hub with Bitdog Cloud.')
    .option('-u,--username <username>', 'The username for the Bitdog IoT Cloud to register this hub with.')
    .option('-p,--passphrase <passphrase>', 'The passphrase for the Bitdog IoT Cloud to register this hub with.')
    .option('-n,--nodename <nodename>', 'The name that will be displayed on the Bitdog IoT Cloud dashboard.')
    .action(function (options) {

        if (typeof options.passphrase == 'undefined' || typeof options.username == 'undefined') {
            console.log('Please provide a username and passphrase when registering.');
            this.outputHelp();
        }
        else {
            console.log('Registering node...')
            var adminManager = bitdogClient.adminManager;
            var nodeName = typeof options.nodename == 'undefined' ? 'New Node' : options.nodename;
            adminManager.registerNode(options.username, options.passphrase, nodeName, function (success) { console.log('Registration successful.'); }, function (error) { console.log(error); });

        }


    });

program
    .command('start')
    .description('Start Bitdog Hub.')
    .action(function (options) {
        var fs = require('fs');
		var path = require('path');
		var child_process = require('child_process');
		var packageFilePath = path.resolve(__dirname, '../');
		var pidFile = path.resolve(__dirname,'pid.txt');

		var opt = { 
			 stdio: ['ignore', 'ignore' , 'ignore'], 
			 env: process.env, 
			 cwd: process.cwd, 
			 detached: true 
		}; 
 
 
     // spawn the child using the same node process as ours 
     var child = child_process.spawn('node', [packageFilePath], opt); 
	 
	 fs.writeFileSync(pidFile, child.pid);
	 	
     console.log('bitdog-hub started');

     // required so the parent can exit 
     child.unref(); 


    });

program
    .command('stop')
    .description('Stop bitdog-hub.')
    .action(function (options) {
		var child_process = require('child_process');
        var fs = require('fs');
		var path = require('path');
		var packageFilePath = path.resolve(__dirname, '../');
		var pidFile = path.resolve(__dirname,'pid.txt');

		var opt = { 
			 stdio: ['ignore', 'ignore' , 'ignore'], 
			 env: process.env, 
			 cwd: process.cwd, 
		}; 

		try {

			try
			{
				fs.accessSync(pidFile, fs.F_OK);
			}
			catch(e) {
				console.log('Process id file not found, bitdog-hub may not be running');
				return;
			}

			var pid = fs.readFileSync(pidFile);
			var pidId = parseInt(pid);

			console.log('Stopping bitdog-hub...');
			process.kill(pidId,'SIGINT');

			setTimeout(function() {
				try
				{
					child_process.execSync('kill -s 0 ' + pidId, opt);
					console.log('bitdog-hub did not stop in timely fashion');

				} catch(e) {					
				    console.log('bitdog-hub has stopped');
   				    fs.unlinkSync(pidFile);
					return;
				}

			}, 10000);

   
		} catch (e) {
			console.log(JSON.stringify(e));
		}

    });

program.parse(process.argv);

if (!process.argv.slice(2).length) {
    program.outputHelp();
}



